/*********** PRODUCE *************/
.main-produce {
  padding-top: 180px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  &__description {
    padding-top: 31px;
    padding-left: 95px;
    margin-bottom: 50px;
    min-height: 350px;
  }

  &__description-title {
    font-size: 42px;
    line-height: 50px;
    color: $textColor;
    margin-bottom: 40px;
  }

  &__description-text {
    font-family: $font-family;
    font-weight: 300;
    font-size: 20px;
    line-height: 35px;
    color: $textColor;
    opacity: 0.8;
    max-width: 472px;
  }

  &__item {
    width: 350px;
    height: 350px;
    margin-bottom: 50px;
    padding-top: 40px;
    background-color: $lightColor;
    box-shadow: 0 15px 123px -40px rgba(0, 0, 0, 0.2);
    transition: .3s;

    &:last-of-type {
      padding-top: 50px;
    }
  }

  &__item-img {
    height: 130px;
    width: auto;
    object-fit: contain;
    display: block;
    margin: 0 auto 35px auto;

    .svg {
      fill: $mainHover;
      transition: .3s;
    }

    .stroke {
      stroke: $mainHover;
      transition: .3s;
    }
  }

  .main-produce__item:last-of-type {
    .main-produce__item-img {
      height: 110px;
    }
  }

  .main-produce__item:nth-of-type(7) {
    .main-produce__item-img {
      margin: 0 auto 25px auto;
    }
  }

  .main-produce__item:nth-of-type(6) {
    .main-produce__item-img {
      margin: 0 auto 25px auto;
    }
  }

  &__item-text {
    font-family: $font-family;
    font-weight: 300;
    font-size: 20px;
    line-height: 35px;
    color: $textColor;
    opacity: 0.8;
    padding: 0 35px;
    transition: .3s;
  }

  &__item {
    &:hover {
      background-color: $mainHover;

      .main-produce {
        &__item-text {
          opacity: 1;
          color: $lightColor;
        }

        &__item-img {
          .svg {
            fill: $lightColor;
          }

          .stroke {
            stroke: $lightColor;
          }
        }
      }
    }
  }
}

// $xl-produce: 1123.9px
@media screen and (max-width: $xl-produce) {
  .main-produce {
    justify-content: center;
    padding-top: 80px;
    padding-left: 30px;

    &__description {
      margin-right: 30px;
      min-height: auto;
      padding-top: 0;
      margin-bottom: 60px;
      padding-left: 0;
    }

    &__description-text {
      max-width: 730px;
    }

    &__item {
      margin-right: 30px;
      margin-bottom: 40px;

      &:last-of-type {
        margin-bottom: 20px;
      }
    }
  }
}

//$md: 767.9px
@media screen and (max-width: $md) {
  .main-produce {
    &__item {
      &:hover {
        background-color: $lightColor;

        .main-produce {
          &__item-text {
            opacity: .8;
            color: $textColor;
          }

          &__item-img {
            .svg {
              fill: $mainHover;
            }

            .stroke {
              stroke: $mainHover;
            }
          }
        }
      }

      &.idea {
        animation: item-anim 1s linear infinite;
        animation-play-state: paused;
        animation-delay: calc(var(--scrollFirstCard) * -1s);
        animation-iteration-count: 1;
        animation-fill-mode: both;
        .main-produce {
          &__item-text {
            animation: text-animation 1s linear infinite;
            animation-play-state: paused;
            animation-delay: calc(var(--scrollFirstCard) * -1s);
            animation-iteration-count: 1;
            animation-fill-mode: both;
          }

          &__item-img {
            .svg {
              animation: fill-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollFirstCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }

            .stroke {
              animation: stroke-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollFirstCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }
          }
        }
      }

      &.formula {
        animation: item-anim 1s linear infinite;
        animation-play-state: paused;
        animation-delay: calc(var(--scrollSecondCard) * -1s);
        animation-iteration-count: 1;
        animation-fill-mode: both;
        .main-produce {
          &__item-text {
            animation: text-animation 1s linear infinite;
            animation-play-state: paused;
            animation-delay: calc(var(--scrollSecondCard) * -1s);
            animation-iteration-count: 1;
            animation-fill-mode: both;
          }

          &__item-img {
            .svg {
              animation: fill-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollSecondCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }

            .stroke {
              animation: stroke-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollSecondCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }
          }
        }
      }

      &.testing {
        animation: item-anim 1s linear infinite;
        animation-play-state: paused;
        animation-delay: calc(var(--scrollThirdCard) * -1s);
        animation-iteration-count: 1;
        animation-fill-mode: both;
        .main-produce {
          &__item-text {
            animation: text-animation 1s linear infinite;
            animation-play-state: paused;
            animation-delay: calc(var(--scrollThirdCard) * -1s);
            animation-iteration-count: 1;
            animation-fill-mode: both;
          }

          &__item-img {
            .svg {
              animation: fill-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollThirdCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }

            .stroke {
              animation: stroke-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollThirdCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }
          }
        }
      }

      &.document {
        animation: item-anim 1s linear infinite;
        animation-play-state: paused;
        animation-delay: calc(var(--scrollForthCard) * -1s);
        animation-iteration-count: 1;
        animation-fill-mode: both;
        .main-produce {
          &__item-text {
            animation: text-animation 1s linear infinite;
            animation-play-state: paused;
            animation-delay: calc(var(--scrollForthCard) * -1s);
            animation-iteration-count: 1;
            animation-fill-mode: both;
          }

          &__item-img {
            .svg {
              animation: fill-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollForthCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }

            .stroke {
              animation: stroke-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollForthCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }
          }
        }
      }

      &.award {
        animation: item-anim 1s linear infinite;
        animation-play-state: paused;
        animation-delay: calc(var(--scrollFifthCard) * -1s);
        animation-iteration-count: 1;
        animation-fill-mode: both;
        .main-produce {
          &__item-text {
            animation: text-animation 1s linear infinite;
            animation-play-state: paused;
            animation-delay: calc(var(--scrollFifthCard) * -1s);
            animation-iteration-count: 1;
            animation-fill-mode: both;
          }

          &__item-img {
            .svg {
              animation: fill-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollFifthCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }

            .stroke {
              animation: stroke-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollFifthCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }
          }
        }
      }

      &.brand {
        animation: item-anim 1s linear infinite;
        animation-play-state: paused;
        animation-delay: calc(var(--scrollSixthCard) * -1s);
        animation-iteration-count: 1;
        animation-fill-mode: both;
        .main-produce {
          &__item-text {
            animation: text-animation 1s linear infinite;
            animation-play-state: paused;
            animation-delay: calc(var(--scrollSixthCard) * -1s);
            animation-iteration-count: 1;
            animation-fill-mode: both;
          }

          &__item-img {
            .svg {
              animation: fill-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollSixthCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }

            .stroke {
              animation: stroke-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollSixthCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }
          }
        }
      }

      &.shipment {
        animation: item-anim 1s linear infinite;
        animation-play-state: paused;
        animation-delay: calc(var(--scrollSeventhCard) * -1s);
        animation-iteration-count: 1;
        animation-fill-mode: both;
        .main-produce {
          &__item-text {
            animation: text-animation 1s linear infinite;
            animation-play-state: paused;
            animation-delay: calc(var(--scrollSeventhCard) * -1s);
            animation-iteration-count: 1;
            animation-fill-mode: both;
          }

          &__item-img {
            .svg {
              animation: fill-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollSeventhCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }

            .stroke {
              animation: stroke-anim 1s linear infinite;
              animation-play-state: paused;
              animation-delay: calc(var(--scrollSeventhCard) * -1s);
              animation-iteration-count: 1;
              animation-fill-mode: both;
            }
          }
        }
      }
    }
  }
}

// $xs: 575.9px
@media screen and (max-width: $xs) {
  .main-produce {
    padding-right: 15px;
    padding-left: 15px;

    &__description {
      margin-right: 0;
    }

    &__description-title {
      font-size: 35px;
      line-height: 40px;
    }

    &__description-text {
      font-size: 18px;
      line-height: 30px;
    }

    &__item {
      margin-right: 0;
      width: 100%;
    }

    &__item-text {
      font-size: 18px;
      line-height: 30px;
    }
  }
}

@keyframes item-anim {
  0% {
    background-color: $lightColor;
  }
  48% {
    background-color: $lightColor;
  }
  50% {
    background-color: $mainHover;
  }
  100% {
    background-color: $mainHover;
  }
}

@keyframes text-animation {
  0% {
    opacity: .8;
    color: $textColor;
  }
  48% {
    opacity: .8;
    color: $textColor;
  }
  50% {
    color: $lightColor;
    opacity: 1;
  }
  100% {
    color: $lightColor;
    opacity: 1;
  }
}

@keyframes fill-anim {
  0% {
    fill: $mainHover;
  }
  48% {
    fill: $mainHover;
  }
  50% {
    fill: $lightColor;
  }
  100% {
    fill: $lightColor;
  }
}

@keyframes stroke-anim {
  0% {
    stroke: $mainHover;
  }
  48% {
    stroke: $mainHover;
  }
  50% {
    stroke: $lightColor;
  }
  100% {
    stroke: $lightColor;
  }
}

/*********** PRODUCE END *************/
